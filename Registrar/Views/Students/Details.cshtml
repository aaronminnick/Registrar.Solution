@{
  Layout = "_Layout";
}

@model Registrar.Models.Student

<h2>Student Details</h2>

<h3>First Name: @Html.DisplayFor(model => model.FirstName)</h3>

<h3>Last Name: @Html.DisplayFor(model => model.LastName)</h3>

<h3>Enrollment Date: @Model.EnrollmentDate.ToShortDateString()</h3>

@if(@Model.CourseStudents.Count == 0)
{
  <p>This student is not currently taking any classes.</p>
}
else
{
  <h3>Courses:</h3>
  <ul>
    @foreach (var join in Model.CourseStudents)
    {
      <li>@join.Course.Name - @join.Course.Number</li>
      @using (Html.BeginForm("DeleteCourse", "Students"))
      {
        @Html.Hidden("studentId", @Model.StudentId)
        @Html.Hidden("joinId", @join.CourseStudentId)
        <input type="submit" value="Delete" />
      }
    }
  </ul>
}

@if(@Model.DepartmentStudents.Count == 0)
{
  <p>This student currently has not declared their major.</p>
}
else
{
  <h3>Major:</h3>
  <ul>
    @foreach (var join in Model.DepartmentStudents)
    {
      <li>@join.Department.Name</li>
      @using (Html.BeginForm("DeleteDepartment", "Students"))
      {
        @Html.Hidden("studentId", @Model.StudentId)
        @Html.Hidden("joinId", @join.DepartmentStudentId)
        <input type="submit" value="Delete" />
      }
    }
  </ul>
}


<p>@Html.ActionLink("Edit Student", "Edit", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Delete Student", "Delete", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Enroll Student in new Course", "AddCourse", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Choose Student's Major", "AddDepartment", new { id = Model.StudentId })</p>